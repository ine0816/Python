    斐波那契数列（Fibonacci series），又称黄金分割数列、因数学家列昂纳多·斐波那契（Leonardoda Fibonacci）
以兔子繁殖为例子而引入，故又称为“兔子数列”，指的是这样一个数列：1、1、2、3、5、8、13、21、34、……在数学上，
斐波纳契数列以如下被以递归的方法定义：F(0)=0，F(1)=1, F(n)=F(n-1)+F(n-2)（n>=2，n∈N*）在现代物理、准晶体结构、
化学等领域，斐波纳契数列都有直接的应用，为此，美国数学会从1963起出版了以《斐波那契数列季刊》为名的一份数学杂志，用于
专门刊载这方面的研究成果。

    其实就是从第三项开始，每项的值等于前两项的和。
    
    
Python3实现斐波拉契数列打印：

方法一：
def fib(n): # 返回到 n 的斐波那契数列
    Fibonacci = []
    a, b = 0, 1
    while b < n:
        Fibonacci.append(b)
        a, b = b, a+b
    return Fibonacci

x=int(input("Input number A:"))
print(fib(x))
print(sum(fib(x)))

方法二：
iterations = int(input("Number of iterations(斐波拉契数列): "))
cont = 1
result = ""
 
if iterations > 0:
    fibonacci1 = 0
    fibonacci2 = 1
 
    result = result + "" + format(fibonacci1)
    result = result + ", " + format(fibonacci2)
 
    while cont < iterations:
        temp = fibonacci2
        fibonacci2 = fibonacci1 + fibonacci2
        fibonacci1 = temp
        result = result + ", " + format(fibonacci2)
        cont = cont + 1

print("Fibonacci: " + result)

方法三：
import sys
 
def fibonacci(n): # 生成器函数 - 斐波那契
    a, b, counter = 0, 1, 0
    while True:
        if (counter > n): 
            return
        yield a
        a, b = b, a + b
        counter += 1
f = fibonacci(20) # f 是一个迭代器，由生成器返回生成
 
while True:
    try:
        print (next(f), end=" ")
    except StopIteration:
        sys.exit()
